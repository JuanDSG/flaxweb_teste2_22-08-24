{"1724376469870":{"actionType":"saveAll","createdAt":"1724376469870","actionID":"1724376469870","userID":"#TEMP","path":"system.capsules.1a41c0ac-b0b6-4ec3-ad5a-4ff590be2f38.capsUseCodeInfo.capsUseInputs.sss_freeValue-0.capsIptTxtValue","oldValue":"// ---------- import Packs\nimport React from 'react';\nimport { View } from 'react-native';\n\n// ---------- import Local Tools\nimport { getStlValues, mapElements } from '../project';\nimport { useRoutes } from '../../..';\n\ntype Tprops = {\n  pass: {\n    pathScreen: string;\n    styles: any;\n    screenElements: any;\n    startFunctions: any;\n    args: any;\n  };\n};\n\n// Screen3 (newBase)\nexport const Screen3 = (props: Tprops) => {\n  const { pathScreen } = props.pass;\n  const currRoute = useRoutes(ct => ct.currRoute);\n  const condShow = pathScreen === currRoute;\n\n  return <>{condShow && <Screen3Render pass={props.pass} />}</>;\n};\n\nfunction Screen3Render(props: Tprops) {\n  const { styles, screenElements, startFunctions, args } = props.pass;\n\n  // ---------- call Functions (If Exists)\n  React.useEffect(() => {\n    const callFn = async () => {\n      for (const currFunc of startFunctions) await currFunc();\n    };\n    callFn().catch(err => console.log({ err }));\n  }, []);\n\n  // ---------- set Variables Styles (If Exists)\n  const stl = getStlValues(styles);\n  const baseScreen = { width: '100%', height: '100vh' };\n\n  // ---------- set Render\n  return (\n    <View style={[baseScreen, stl]}>{mapElements(screenElements, args)}</View>\n  );\n}\n","newValue":"// ---------- import Packs\nimport React from 'react';\nimport { Text, View } from 'react-native';\n\n// ---------- import Local Tools\nimport { getStlValues, mapElements } from '../project';\nimport { useRoutes } from '../../..';\n\ntype Tprops = {\n  pass: {\n    pathScreen: string;\n    styles: any;\n    screenElements: any;\n    startFunctions: any;\n    args: any;\n  };\n};\n\n// Screen3 (newBase)\nexport const Screen3 = (props: Tprops) => {\n  const { pathScreen } = props.pass;\n  const currRoute = useRoutes(ct => ct.currRoute);\n  const condShow = pathScreen === currRoute;\n\n  return <>{condShow && <Screen3Render pass={props.pass} />}</>;\n};\n\nfunction Screen3Render(props: Tprops) {\n  const { styles, screenElements, startFunctions, args } = props.pass;\n\n  // ---------- call Functions (If Exists)\n  React.useEffect(() => {\n    const callFn = async () => {\n      for (const currFunc of startFunctions) await currFunc();\n    };\n    callFn().catch(err => console.log({ err }));\n  }, []);\n\n  // ---------- set Variables Styles (If Exists)\n  const stl = getStlValues(styles);\n  const baseScreen = { width: '100%', height: '100vh' };\n\n  // ---------- set Render\n  return (\n    <View style={[baseScreen, stl]}>\n              <Text>{'Olá Screen!'}</Text>\n\n      {/* {mapElements(screenElements, args)} */}\n      </View>\n  );\n}\n"}}